@startuml admin-drug-management-sequence
title Admin Drug Management Sequence Diagram

actor Admin
participant "Admin\nPanel" as AdminUI
participant "Drug\nController" as DrugController
participant "Drug\nModel" as DrugModel
participant "Order\nModel" as OrderModel
participant "File\nUpload Service" as FileService
participant "Database" as DB

== View Drug Management ==
Admin -> AdminUI: Access drug management
AdminUI -> DrugController: getDrugs(filters, pagination)
DrugController -> DrugModel: getAllDrugs(filters, limit, offset)
DrugModel -> DB: SELECT * FROM drugs WHERE conditions ORDER BY name LIMIT ? OFFSET ?
DB --> DrugModel: Drugs list
DrugModel --> DrugController: Drugs data
DrugController --> AdminUI: Drugs information
AdminUI --> Admin: Display drug list

== Add New Drug ==
Admin -> AdminUI: Click "Add New Drug"
AdminUI --> Admin: Show drug form

Admin -> AdminUI: Fill drug details (name, description, price, stock)
Admin -> AdminUI: Upload drug images
AdminUI -> FileService: uploadImages(imageFiles)
FileService -> FileService: Validate image files
FileService -> FileService: Store images
FileService --> AdminUI: Image URLs
AdminUI --> Admin: Images uploaded successfully

Admin -> AdminUI: Submit drug form
AdminUI -> DrugController: createDrug(drugData)

DrugController -> DrugController: validateDrugData(drugData)
DrugController -> DrugModel: checkDrugExists(name)
DrugModel -> DB: SELECT * FROM drugs WHERE name=?
DB --> DrugModel: Drug existence check
DrugModel --> DrugController: Drug existence status

alt Drug already exists
    DrugController --> AdminUI: Drug name conflict error
    AdminUI --> Admin: Show error message
else Drug name available
    DrugController -> DrugModel: createDrug(drugData)
    DrugModel -> DB: INSERT INTO drugs (name, description, price, stock)
    DB --> DrugModel: Drug created
    DrugModel --> DrugController: New drug data
    
    DrugController --> AdminUI: Drug created successfully
    AdminUI --> Admin: Show success message and refresh list
end

== Edit Existing Drug ==
Admin -> AdminUI: Select drug to edit
AdminUI -> DrugController: getDrugDetails(drugId)
DrugController -> DrugModel: findById(drugId)
DrugModel -> DB: SELECT * FROM drugs WHERE id=?
DB --> DrugModel: Drug details
DrugModel --> DrugController: Drug data
DrugController --> AdminUI: Drug information
AdminUI --> Admin: Show edit form with current data

Admin -> AdminUI: Modify drug details
Admin -> AdminUI: Submit changes
AdminUI -> DrugController: updateDrug(drugId, updatedData)

DrugController -> DrugController: validateDrugData(updatedData)
DrugController -> DrugModel: updateDrug(drugId, updatedData)
DrugModel -> DB: UPDATE drugs SET name=?, description=?, price=?, stock=? WHERE id=?
DB --> DrugModel: Update successful
DrugModel --> DrugController: Updated drug data

DrugController --> AdminUI: Drug updated successfully
AdminUI --> Admin: Show success message and refresh list

== Delete Drug ==
Admin -> AdminUI: Select drug to delete
AdminUI -> DrugController: checkDrugDeletion(drugId)

DrugController -> OrderModel: checkActiveOrders(drugId)
OrderModel -> DB: SELECT COUNT(*) FROM order_items oi JOIN orders o ON oi.order_id = o.id WHERE oi.drug_id=? AND o.status IN ('pending', 'confirmed', 'shipped')
DB --> OrderModel: Active order count
OrderModel --> DrugController: Active orders status

alt Drug has active orders
    DrugController --> AdminUI: Cannot delete - active orders exist
    AdminUI --> Admin: Show warning message
    
    Admin -> AdminUI: Choose to discontinue instead
    AdminUI -> DrugController: discontinueDrug(drugId)
    DrugController -> DrugModel: markAsDiscontinued(drugId)
    DrugModel -> DB: UPDATE drugs SET status='discontinued' WHERE id=?
    DB --> DrugModel: Drug discontinued
    DrugModel --> DrugController: Status updated
    DrugController --> AdminUI: Drug discontinued
    AdminUI --> Admin: Show discontinuation confirmation
    
else No active orders
    AdminUI --> Admin: Show delete confirmation dialog
    Admin -> AdminUI: Confirm deletion
    AdminUI -> DrugController: deleteDrug(drugId)
    
    DrugController -> DrugModel: deleteDrug(drugId)
    DrugModel -> DB: DELETE FROM drugs WHERE id=?
    DB --> DrugModel: Drug deleted
    DrugModel --> DrugController: Deletion successful
    
    DrugController --> AdminUI: Drug deleted successfully
    AdminUI --> Admin: Show success message and refresh list
end

== View Drug Analytics ==
Admin -> AdminUI: View drug analytics
AdminUI -> DrugController: getDrugAnalytics(drugId)
DrugController -> OrderModel: getDrugSalesData(drugId)
OrderModel -> DB: SELECT COUNT(*), SUM(quantity), SUM(price * quantity) FROM order_items WHERE drug_id=?
DB --> OrderModel: Sales statistics
OrderModel --> DrugController: Analytics data
DrugController --> AdminUI: Drug analytics
AdminUI --> Admin: Display sales charts and statistics

@enduml
