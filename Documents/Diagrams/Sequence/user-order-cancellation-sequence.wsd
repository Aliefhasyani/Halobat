@startuml user-order-cancellation-sequence
title User Order Cancellation Sequence Diagram

actor User
participant "Order\nInterface" as OrderUI
participant "Order\nController" as OrderController
participant "Order\nModel" as OrderModel
participant "OrderItem\nModel" as OrderItemModel
participant "Drug\nModel" as DrugModel
participant "Payment\nModel" as PaymentModel
participant "Database" as DB

== User Cancels Order ==
User -> OrderUI: Click "Cancel Order"
OrderUI -> OrderController: cancelOrder(orderId, userId)

OrderController -> OrderModel: getOrder(orderId, userId)
OrderModel -> DB: SELECT * FROM orders WHERE id=? AND user_id=?
DB --> OrderModel: Order details
OrderModel --> OrderController: Order data

alt Order cannot be cancelled (already shipped/delivered)
    OrderController --> OrderUI: Cancellation not allowed
    OrderUI --> User: Show error message
else Order can be cancelled
    OrderController -> OrderModel: updateOrderStatus(orderId, 'cancelled')
    OrderModel -> DB: UPDATE orders SET status='cancelled' WHERE id=?
    DB --> OrderModel: Status updated
    OrderModel --> OrderController: Order cancelled
    
    OrderController -> PaymentModel: updatePaymentStatus(orderId, 'refunded')
    PaymentModel -> DB: UPDATE payments SET status='refunded' WHERE order_id=?
    DB --> PaymentModel: Payment status updated
    PaymentModel --> OrderController: Payment updated
    
    OrderController -> OrderItemModel: getOrderItems(orderId)
    OrderItemModel -> DB: SELECT * FROM order_items WHERE order_id=?
    DB --> OrderItemModel: Order items
    OrderItemModel --> OrderController: Items to restore
    
    loop For each order item
        OrderController -> DrugModel: restoreStock(drugId, quantity)
        DrugModel -> DB: UPDATE drugs SET stock = stock + ? WHERE id=?
        DB --> DrugModel: Stock restored
        DrugModel --> OrderController: Stock updated
    end
    
    OrderController --> OrderUI: Order cancelled successfully
    OrderUI --> User: Show cancellation confirmation
end

@enduml
